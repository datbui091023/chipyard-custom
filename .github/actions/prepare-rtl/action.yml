name: prepare-rtl
description: 'Builds RTL based on parameters, caches the entire chipyard root dir when done'

inputs:
<<<<<<< HEAD
=======
  tools-version:
    description: Which toolchain to build
    required: false
    default: 'riscv-tools'
>>>>>>> 52c752ba... Move Chipyard CI to Github Actions
  group-key:
    description: group key
    required: true
  build-script:
    description: rtl build script to use
    required: false
<<<<<<< HEAD
    default: "remote-do-rtl-build.sh"
=======
    default: "do-rtl-build.sh"
>>>>>>> 52c752ba... Move Chipyard CI to Github Actions
  build-type:
    description: type of build
    required: false
    default: "sim"

runs:
  using: "composite"
  steps:
<<<<<<< HEAD
    - name: Build RISC-V toolchains
      uses: ./.github/actions/toolchain-build

=======
>>>>>>> 52c752ba... Move Chipyard CI to Github Actions
    - uses: actions/cache@v2
      id: rtl-build-id
      with:
        path: |
          sims/verilator
          sims/firesim/sim
          generators/gemmini/software/gemmini-rocc-tests
        key: ${{ inputs.group-key }}-${{ github.ref }}-${{ github.sha }}
<<<<<<< HEAD

    - name: Run RTL build if not cached
=======
    - name: run rtl build script if not cached
>>>>>>> 52c752ba... Move Chipyard CI to Github Actions
      run: |
        if [[ "${{ steps.rtl-build-id.outputs.cache-hit }}" != 'true' ]]; then
          echo "Cache miss on ${{ inputs.group-key }}-${{ github.ref }}-${{ github.sha }}"
          ./.github/scripts/${{ inputs.build-script }} ${{ inputs.group-key }} ${{ inputs.build-type }}
        else
<<<<<<< HEAD
          echo "Cache hit do not rebuild RTL for ${{ inputs.group-key }}"
        fi
      shell: bash
=======
          echo "cache hit do not prepare rtl"
        fi
      shell: bash

>>>>>>> 52c752ba... Move Chipyard CI to Github Actions
